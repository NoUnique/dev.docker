# docker-compose script to build multi-node training environment.
#
# Author : NoUnique (kofmap@gmail.com)
# Copyright 2020 NoUnique. All Rights Reserved

version: '2.2'

services:
  dev:
    build:
      context: .
      dockerfile: ./Dockerfile_dev
      args:
        USER: ${USER}
    hostname: devenv 
    image: "${COMPOSE_IMAGE_NAME}:${USER}"
    environment:
      - PYTHONPATH=/home/${USER}/dev
      - PYTHONUNBUFFERED=0
      - DISPLAY=${DISPLAY}
    working_dir: /home/${USER}/dev
    user: ${USER}
    network_mode: host
    volumes:
      - ..:/home/${USER}/dev:rw
      - /data:/data
      # X11 fowarding
      - ~/.Xauthority:/home/${USER}/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    entrypoint:
      - /bin/bash
    stdin_open: true # -i(interactive) option in docker
    tty: true # -t(tty) option in docker
    shm_size: 64G

  tensorboard:
    build:
      context: .
      dockerfile: ./Dockerfile_dev
      args:
        USER: ${USER}
    hostname: tensorboard
    image: "${COMPOSE_IMAGE_NAME}:${USER}"
    working_dir: /home/${USER}/dev
    user: ${USER}
    ports:
      - "6006:6006"
    volumes:
      - ..:/home/${USER}/dev:rw
    command: tensorboard --logdir /home/${USER}/dev/checkpoints --host 0.0.0.0
    stdin_open: true
    tty: true
    shm_size: 4G

  jupyter:
    build:
      context: .
      dockerfile: ./Dockerfile_jupyter
      args:
        USER: ${USER}
        COMPOSE_IMAGE_NAME: ${COMPOSE_IMAGE_NAME}
    hostname: jupyter_notebook
    image: "${COMPOSE_IMAGE_NAME}/jupyter:${USER}"
    working_dir: /home/${USER}/dev
    user: ${USER}
    ports:
      - "8888:8888"
    volumes:
      - ..:/home/${USER}/dev:rw
      - /data:/data
    command: jupyter notebook --no-browser --ip=0.0.0.0 --port=8888 --allow-root
    stdin_open: true
    tty: true
    shm_size: 16G
